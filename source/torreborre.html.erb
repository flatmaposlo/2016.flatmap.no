<%= partial "description_inverse" %>
<section class="speakers" id="session">
    <div class="row">
      <div class="text-center">
        <h3>THE EFF MONAD, ONE MONAD TO RULE THEM ALL</h3>
      </div>
      <p class="spaced">
        <p>
        Monad transformers are a neat way to compose effectul computations:
        pass some configuration, read/write from disk, track errors...
        However they can be a bit cumbersome to deal with, especially if you
        want to use different stacks sharing some common effects:
        for example a stack to interact with AWS and another one for Hadoop
        computations.
        </p>

        <p>
        This talk will shortly introduce monad transformers in Scala and their
        drawbacks then present the Eff monad.
        </p>
        <p>
        The Eff monad has some really interesting properties:

        <ul>
          <li>
            effects can be developed completely independently from each other
          </li>
          <li>
            effects can be interpreted in different ways and the interpreters
            can be composed together
          </li>
          <li>
            it is based on an efficient "Free monad"
            (avoiding the issue of quadratic flatMaps)
          </li>
          <li>
            with the Eff monad you will never have to re-implement the Monad
            operations (point / flatMap) again!
          </li>
        </ul>
        </p>
      </p>
      <div class="text-center">
        <a name="torreborre"></a>
        <p><img src="images/torreborre.png" height="180" width="180"/></p>
        <h3>ERIC TORREBORRE</h3>
        <p><a href="https://twitter.com/etorreborre">@etorreborre</a></p>
      </div>
      <p class="spaced">
        <p>
        Eric Torreborre is a software developer living in Berlin, working for
        Zalando.
        He is the creator of the specs2 library for software specifications in
        Scala.
        </p>
        <p>
        Scala has been his gateway drug to functional programming and made him
        a more satisfied developer.
        When he finally understands what he is doing he tries to share it with
        the rest of the world.
        </p>
      </p>
  </div>
</section>
<%= partial "sponsors" %>
<%= partial "about" %>
